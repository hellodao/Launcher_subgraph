// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AIRDROPEvent extends ethereum.Event {
  get params(): AIRDROPEvent__Params {
    return new AIRDROPEvent__Params(this);
  }
}

export class AIRDROPEvent__Params {
  _event: AIRDROPEvent;

  constructor(event: AIRDROPEvent) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get heroId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DaoEvent extends ethereum.Event {
  get params(): DaoEvent__Params {
    return new DaoEvent__Params(this);
  }
}

export class DaoEvent__Params {
  _event: DaoEvent;

  constructor(event: DaoEvent) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get awardDAO(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Launcher extends ethereum.SmartContract {
  static bind(address: Address): Launcher {
    return new Launcher("Launcher", address);
  }

  airdropRounds(): BigInt {
    let result = super.call("airdropRounds", "airdropRounds():(uint256)", []);

    return result[0].toBigInt();
  }

  try_airdropRounds(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "airdropRounds",
      "airdropRounds():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentAirdropAmount(): BigInt {
    let result = super.call(
      "currentAirdropAmount",
      "currentAirdropAmount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_currentAirdropAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentAirdropAmount",
      "currentAirdropAmount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentDAOAmount(): BigInt {
    let result = super.call(
      "currentDAOAmount",
      "currentDAOAmount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_currentDAOAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentDAOAmount",
      "currentDAOAmount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  daoMAXAMOUNT(): BigInt {
    let result = super.call("daoMAXAMOUNT", "daoMAXAMOUNT():(uint256)", []);

    return result[0].toBigInt();
  }

  try_daoMAXAMOUNT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("daoMAXAMOUNT", "daoMAXAMOUNT():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fee(): BigInt {
    let result = super.call("fee", "fee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_fee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("fee", "fee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  heroNFT(): Address {
    let result = super.call("heroNFT", "heroNFT():(address)", []);

    return result[0].toAddress();
  }

  try_heroNFT(): ethereum.CallResult<Address> {
    let result = super.tryCall("heroNFT", "heroNFT():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  maxClaimDAO(): BigInt {
    let result = super.call("maxClaimDAO", "maxClaimDAO():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxClaimDAO(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxClaimDAO", "maxClaimDAO():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  merkleRoot(): Bytes {
    let result = super.call("merkleRoot", "merkleRoot():(bytes32)", []);

    return result[0].toBytes();
  }

  try_merkleRoot(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("merkleRoot", "merkleRoot():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  nftMAXAMOUNT(): BigInt {
    let result = super.call("nftMAXAMOUNT", "nftMAXAMOUNT():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nftMAXAMOUNT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nftMAXAMOUNT", "nftMAXAMOUNT():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  receiveDAOFlg(): boolean {
    let result = super.call("receiveDAOFlg", "receiveDAOFlg():(bool)", []);

    return result[0].toBoolean();
  }

  try_receiveDAOFlg(): ethereum.CallResult<boolean> {
    let result = super.tryCall("receiveDAOFlg", "receiveDAOFlg():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  saleIsActive(): boolean {
    let result = super.call("saleIsActive", "saleIsActive():(bool)", []);

    return result[0].toBoolean();
  }

  try_saleIsActive(): ethereum.CallResult<boolean> {
    let result = super.tryCall("saleIsActive", "saleIsActive():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tokenDAO(): Address {
    let result = super.call("tokenDAO", "tokenDAO():(address)", []);

    return result[0].toAddress();
  }

  try_tokenDAO(): ethereum.CallResult<Address> {
    let result = super.tryCall("tokenDAO", "tokenDAO():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getHeroMaxId(): BigInt {
    let result = super.call("getHeroMaxId", "getHeroMaxId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getHeroMaxId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getHeroMaxId", "getHeroMaxId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAirdroped(account: Address): boolean {
    let result = super.call("getAirdroped", "getAirdroped(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_getAirdroped(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("getAirdroped", "getAirdroped(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getAwardDAO(account: Address): BigInt {
    let result = super.call("getAwardDAO", "getAwardDAO(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_getAwardDAO(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAwardDAO",
      "getAwardDAO(address):(uint256)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _hero(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class ClaimDaoCall extends ethereum.Call {
  get inputs(): ClaimDaoCall__Inputs {
    return new ClaimDaoCall__Inputs(this);
  }

  get outputs(): ClaimDaoCall__Outputs {
    return new ClaimDaoCall__Outputs(this);
  }
}

export class ClaimDaoCall__Inputs {
  _call: ClaimDaoCall;

  constructor(call: ClaimDaoCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimDaoCall__Outputs {
  _call: ClaimDaoCall;

  constructor(call: ClaimDaoCall) {
    this._call = call;
  }
}

export class ClaimHeroCall extends ethereum.Call {
  get inputs(): ClaimHeroCall__Inputs {
    return new ClaimHeroCall__Inputs(this);
  }

  get outputs(): ClaimHeroCall__Outputs {
    return new ClaimHeroCall__Outputs(this);
  }
}

export class ClaimHeroCall__Inputs {
  _call: ClaimHeroCall;

  constructor(call: ClaimHeroCall) {
    this._call = call;
  }

  get merkleProof(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get nftCount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ClaimHeroCall__Outputs {
  _call: ClaimHeroCall;

  constructor(call: ClaimHeroCall) {
    this._call = call;
  }
}

export class ReceiveDAOCall extends ethereum.Call {
  get inputs(): ReceiveDAOCall__Inputs {
    return new ReceiveDAOCall__Inputs(this);
  }

  get outputs(): ReceiveDAOCall__Outputs {
    return new ReceiveDAOCall__Outputs(this);
  }
}

export class ReceiveDAOCall__Inputs {
  _call: ReceiveDAOCall;

  constructor(call: ReceiveDAOCall) {
    this._call = call;
  }
}

export class ReceiveDAOCall__Outputs {
  _call: ReceiveDAOCall;

  constructor(call: ReceiveDAOCall) {
    this._call = call;
  }
}

export class SetRoundsAndMerkleRootCall extends ethereum.Call {
  get inputs(): SetRoundsAndMerkleRootCall__Inputs {
    return new SetRoundsAndMerkleRootCall__Inputs(this);
  }

  get outputs(): SetRoundsAndMerkleRootCall__Outputs {
    return new SetRoundsAndMerkleRootCall__Outputs(this);
  }
}

export class SetRoundsAndMerkleRootCall__Inputs {
  _call: SetRoundsAndMerkleRootCall;

  constructor(call: SetRoundsAndMerkleRootCall) {
    this._call = call;
  }

  get rounds(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _mr(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetRoundsAndMerkleRootCall__Outputs {
  _call: SetRoundsAndMerkleRootCall;

  constructor(call: SetRoundsAndMerkleRootCall) {
    this._call = call;
  }
}

export class SetHeroContractCall extends ethereum.Call {
  get inputs(): SetHeroContractCall__Inputs {
    return new SetHeroContractCall__Inputs(this);
  }

  get outputs(): SetHeroContractCall__Outputs {
    return new SetHeroContractCall__Outputs(this);
  }
}

export class SetHeroContractCall__Inputs {
  _call: SetHeroContractCall;

  constructor(call: SetHeroContractCall) {
    this._call = call;
  }

  get _hero(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetHeroContractCall__Outputs {
  _call: SetHeroContractCall;

  constructor(call: SetHeroContractCall) {
    this._call = call;
  }
}

export class SetDAOContractCall extends ethereum.Call {
  get inputs(): SetDAOContractCall__Inputs {
    return new SetDAOContractCall__Inputs(this);
  }

  get outputs(): SetDAOContractCall__Outputs {
    return new SetDAOContractCall__Outputs(this);
  }
}

export class SetDAOContractCall__Inputs {
  _call: SetDAOContractCall;

  constructor(call: SetDAOContractCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDAOContractCall__Outputs {
  _call: SetDAOContractCall;

  constructor(call: SetDAOContractCall) {
    this._call = call;
  }
}

export class LauncherStartCall extends ethereum.Call {
  get inputs(): LauncherStartCall__Inputs {
    return new LauncherStartCall__Inputs(this);
  }

  get outputs(): LauncherStartCall__Outputs {
    return new LauncherStartCall__Outputs(this);
  }
}

export class LauncherStartCall__Inputs {
  _call: LauncherStartCall;

  constructor(call: LauncherStartCall) {
    this._call = call;
  }

  get b(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class LauncherStartCall__Outputs {
  _call: LauncherStartCall;

  constructor(call: LauncherStartCall) {
    this._call = call;
  }
}

export class ReceiveDAOStartCall extends ethereum.Call {
  get inputs(): ReceiveDAOStartCall__Inputs {
    return new ReceiveDAOStartCall__Inputs(this);
  }

  get outputs(): ReceiveDAOStartCall__Outputs {
    return new ReceiveDAOStartCall__Outputs(this);
  }
}

export class ReceiveDAOStartCall__Inputs {
  _call: ReceiveDAOStartCall;

  constructor(call: ReceiveDAOStartCall) {
    this._call = call;
  }

  get b(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class ReceiveDAOStartCall__Outputs {
  _call: ReceiveDAOStartCall;

  constructor(call: ReceiveDAOStartCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class SetFEECall extends ethereum.Call {
  get inputs(): SetFEECall__Inputs {
    return new SetFEECall__Inputs(this);
  }

  get outputs(): SetFEECall__Outputs {
    return new SetFEECall__Outputs(this);
  }
}

export class SetFEECall__Inputs {
  _call: SetFEECall;

  constructor(call: SetFEECall) {
    this._call = call;
  }

  get f(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetFEECall__Outputs {
  _call: SetFEECall;

  constructor(call: SetFEECall) {
    this._call = call;
  }
}

export class SetMaxClaimDAOCall extends ethereum.Call {
  get inputs(): SetMaxClaimDAOCall__Inputs {
    return new SetMaxClaimDAOCall__Inputs(this);
  }

  get outputs(): SetMaxClaimDAOCall__Outputs {
    return new SetMaxClaimDAOCall__Outputs(this);
  }
}

export class SetMaxClaimDAOCall__Inputs {
  _call: SetMaxClaimDAOCall;

  constructor(call: SetMaxClaimDAOCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxClaimDAOCall__Outputs {
  _call: SetMaxClaimDAOCall;

  constructor(call: SetMaxClaimDAOCall) {
    this._call = call;
  }
}

export class SetCurrentAirdropAmountCall extends ethereum.Call {
  get inputs(): SetCurrentAirdropAmountCall__Inputs {
    return new SetCurrentAirdropAmountCall__Inputs(this);
  }

  get outputs(): SetCurrentAirdropAmountCall__Outputs {
    return new SetCurrentAirdropAmountCall__Outputs(this);
  }
}

export class SetCurrentAirdropAmountCall__Inputs {
  _call: SetCurrentAirdropAmountCall;

  constructor(call: SetCurrentAirdropAmountCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetCurrentAirdropAmountCall__Outputs {
  _call: SetCurrentAirdropAmountCall;

  constructor(call: SetCurrentAirdropAmountCall) {
    this._call = call;
  }
}

export class SetNFTMAXAMOUNTCall extends ethereum.Call {
  get inputs(): SetNFTMAXAMOUNTCall__Inputs {
    return new SetNFTMAXAMOUNTCall__Inputs(this);
  }

  get outputs(): SetNFTMAXAMOUNTCall__Outputs {
    return new SetNFTMAXAMOUNTCall__Outputs(this);
  }
}

export class SetNFTMAXAMOUNTCall__Inputs {
  _call: SetNFTMAXAMOUNTCall;

  constructor(call: SetNFTMAXAMOUNTCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetNFTMAXAMOUNTCall__Outputs {
  _call: SetNFTMAXAMOUNTCall;

  constructor(call: SetNFTMAXAMOUNTCall) {
    this._call = call;
  }
}

export class SetDaoMAXAMOUNTCall extends ethereum.Call {
  get inputs(): SetDaoMAXAMOUNTCall__Inputs {
    return new SetDaoMAXAMOUNTCall__Inputs(this);
  }

  get outputs(): SetDaoMAXAMOUNTCall__Outputs {
    return new SetDaoMAXAMOUNTCall__Outputs(this);
  }
}

export class SetDaoMAXAMOUNTCall__Inputs {
  _call: SetDaoMAXAMOUNTCall;

  constructor(call: SetDaoMAXAMOUNTCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDaoMAXAMOUNTCall__Outputs {
  _call: SetDaoMAXAMOUNTCall;

  constructor(call: SetDaoMAXAMOUNTCall) {
    this._call = call;
  }
}

export class SetCurrentDAOAmountCall extends ethereum.Call {
  get inputs(): SetCurrentDAOAmountCall__Inputs {
    return new SetCurrentDAOAmountCall__Inputs(this);
  }

  get outputs(): SetCurrentDAOAmountCall__Outputs {
    return new SetCurrentDAOAmountCall__Outputs(this);
  }
}

export class SetCurrentDAOAmountCall__Inputs {
  _call: SetCurrentDAOAmountCall;

  constructor(call: SetCurrentDAOAmountCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetCurrentDAOAmountCall__Outputs {
  _call: SetCurrentDAOAmountCall;

  constructor(call: SetCurrentDAOAmountCall) {
    this._call = call;
  }
}
